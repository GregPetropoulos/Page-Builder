{"ast":null,"code":"var _jsxFileName = \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/components/TemplateCard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport pageService from '../services/pages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TemplateCard = ({\n  thumbnail,\n  name,\n  id\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [thumbnailSrc, setThumbnailSrc] = useState();\n  useEffect(() => {\n    import(`../images/${thumbnail}`).then(mod => setThumbnailSrc(mod.default));\n  }, [thumbnail]); // const handleSubmit = async ev => {\n  // \tev.preventDefault();\n  // \tconst [emailInput, passwordInput] = ev.target.elements;\n  // \tconst email = emailInput.value;\n  // \tconst password = passwordInput.value;\n  // \tif (email.length > 0 && password.length > 0) {\n  // \t\tconst userInfo = await accountService.ApiLogin({ email, password });\n  // \t\tif (userInfo.error) {\n  // \t\t\tsetError(userInfo.error);\n  // \t\t} else {\n  // \t\t\tauth(userInfo);\n  // \t\t}\n  // \t} else {\n  // \t\tsetError('Email or password too short');\n  // \t}\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column template-wrapper pointer border p-2 rounded justify-content-between\",\n    onClick: () => history.push(`/create/${id}`),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img-fluid img img-wrapper\",\n      src: thumbnailSrc,\n      alt: \"thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"template-title text-center\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TemplateCard, \"M4g7wRspsr0ZP6KwbSblO+d9gik=\", false, function () {\n  return [useHistory];\n});\n\n_c = TemplateCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateCard\");","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/components/TemplateCard.js"],"names":["useEffect","useState","useHistory","pageService","TemplateCard","thumbnail","name","id","history","thumbnailSrc","setThumbnailSrc","then","mod","default","push"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAAD,KAA6B;AAAA;;AACxD,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,EAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,WAAQ,aAAYK,SAAU,EAA9B,EAAiCM,IAAjC,CAAsCC,GAAG,IACxCF,eAAe,CAACE,GAAG,CAACC,OAAL,CADhB;AAGA,GAJQ,EAIN,CAACR,SAAD,CAJM,CAAT,CAJwD,CAUxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AACC,IAAA,SAAS,EAAC,wFADX;AAEC,IAAA,OAAO,EAAE,MAAMG,OAAO,CAACM,IAAR,CAAc,WAAUP,EAAG,EAA3B,CAFhB;AAAA,4BAIC;AACC,MAAA,SAAS,EAAC,2BADX;AAEC,MAAA,GAAG,EAAEE,YAFN;AAGC,MAAA,GAAG,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,YAJD,eASC;AAAG,MAAA,SAAS,EAAC,4BAAb;AAAA,gBAA2CH;AAA3C;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAxCM;;GAAMF,Y;UACIF,U;;;KADJE,Y","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport pageService from '../services/pages';\r\n\r\nexport const TemplateCard = ({ thumbnail, name, id }) => {\r\n\tconst history = useHistory();\r\n\tconst [thumbnailSrc, setThumbnailSrc] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\timport(`../images/${thumbnail}`).then(mod =>\r\n\t\t\tsetThumbnailSrc(mod.default)\r\n\t\t);\r\n\t}, [thumbnail]);\r\n\r\n\t// const handleSubmit = async ev => {\r\n\t// \tev.preventDefault();\r\n\t// \tconst [emailInput, passwordInput] = ev.target.elements;\r\n\t// \tconst email = emailInput.value;\r\n\t// \tconst password = passwordInput.value;\r\n\t// \tif (email.length > 0 && password.length > 0) {\r\n\t// \t\tconst userInfo = await accountService.ApiLogin({ email, password });\r\n\t// \t\tif (userInfo.error) {\r\n\t// \t\t\tsetError(userInfo.error);\r\n\t// \t\t} else {\r\n\t// \t\t\tauth(userInfo);\r\n\t// \t\t}\r\n\t// \t} else {\r\n\t// \t\tsetError('Email or password too short');\r\n\t// \t}\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"d-flex flex-column template-wrapper pointer border p-2 rounded justify-content-between\"\r\n\t\t\tonClick={() => history.push(`/create/${id}`)}\r\n\t\t>\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"img-fluid img img-wrapper\"\r\n\t\t\t\tsrc={thumbnailSrc}\r\n\t\t\t\talt=\"thumbnail\"\r\n\t\t\t/>\r\n\t\t\t<p className=\"template-title text-center\">{name}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}