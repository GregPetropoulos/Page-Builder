{"ast":null,"code":"var _jsxFileName = \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport accountService from '../services/account';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const localUser = JSON.parse(localStorage.getItem('user'));\n\n      if (localUser && localUser.id) {\n        const user = await accountService.ApiGetUser(localUser.id);\n        console.log('HERE', localUser, user);\n\n        if (user.data) {\n          localStorage.setItem('user', JSON.stringify({\n            id: user._id,\n            ...user.profile\n          }));\n          setCurrentUser(user);\n        }\n      } else {\n        setCurrentUser({});\n      }\n    })();\n  }, []);\n\n  const auth = userData => {\n    console.log('SETTING USER', userData);\n    const user = {\n      id: userData._id,\n      ...userData.profile\n    };\n    localStorage.setItem('user', JSON.stringify(user));\n    setCurrentUser(userData);\n  };\n\n  const signOut = () => {\n    localStorage.removeItem('user');\n    setCurrentUser({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      auth,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/context/AuthContext.js"],"names":["React","useEffect","useState","accountService","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","localUser","JSON","parse","localStorage","getItem","id","user","ApiGetUser","console","log","data","setItem","stringify","_id","profile","auth","userData","signOut","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;AAEP,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMS,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;;AAEA,UAAIJ,SAAS,IAAIA,SAAS,CAACK,EAA3B,EAA+B;AAC7B,cAAMC,IAAI,GAAG,MAAMb,cAAc,CAACc,UAAf,CAA0BP,SAAS,CAACK,EAApC,CAAnB;AAEAG,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBT,SAApB,EAA+BM,IAA/B;;AACA,YAAIA,IAAI,CAACI,IAAT,EAAe;AACbP,UAAAA,YAAY,CAACQ,OAAb,CACE,MADF,EAEEV,IAAI,CAACW,SAAL,CAAe;AAAEP,YAAAA,EAAE,EAAEC,IAAI,CAACO,GAAX;AAAgB,eAAGP,IAAI,CAACQ;AAAxB,WAAf,CAFF;AAIAf,UAAAA,cAAc,CAACO,IAAD,CAAd;AACD;AACF,OAXD,MAWO;AACLP,QAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,KAjBD;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,QAAMgB,IAAI,GAAIC,QAAD,IAAc;AACzBR,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BO,QAA5B;AACA,UAAMV,IAAI,GAAG;AAAED,MAAAA,EAAE,EAAEW,QAAQ,CAACH,GAAf;AAAoB,SAAGG,QAAQ,CAACF;AAAhC,KAAb;AACAX,IAAAA,YAAY,CAACQ,OAAb,CAAqB,MAArB,EAA6BV,IAAI,CAACW,SAAL,CAAeN,IAAf,CAA7B;AACAP,IAAAA,cAAc,CAACiB,QAAD,CAAd;AACD,GALD;;AAOA,QAAMC,OAAO,GAAG,MAAM;AACpBd,IAAAA,YAAY,CAACe,UAAb,CAAwB,MAAxB;AACAnB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAF;AAAeiB,MAAAA,IAAf;AAAqBE,MAAAA;AAArB,KAA7B;AAAA,cACGpB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzCM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport accountService from '../services/account';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const localUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n      if (localUser && localUser.id) {\r\n        const user = await accountService.ApiGetUser(localUser.id);\r\n\r\n        console.log('HERE', localUser, user);\r\n        if (user.data) {\r\n          localStorage.setItem(\r\n            'user',\r\n            JSON.stringify({ id: user._id, ...user.profile })\r\n          );\r\n          setCurrentUser(user);\r\n        }\r\n      } else {\r\n        setCurrentUser({});\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const auth = (userData) => {\r\n    console.log('SETTING USER', userData);\r\n    const user = { id: userData._id, ...userData.profile };\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setCurrentUser(userData);\r\n  };\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem('user');\r\n    setCurrentUser({});\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, auth, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}