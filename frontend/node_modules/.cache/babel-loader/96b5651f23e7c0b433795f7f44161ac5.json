{"ast":null,"code":"var _jsxFileName = \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/components/TemplateEditor.js\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useMemo, useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport pagesService from '../services/pages';\nimport { TemplatePanel } from './TemplatePanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemplateProvider = /*#__PURE__*/forwardRef(_c = ({\n  children\n}, ref) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n});\n_c2 = TemplateProvider;\nexport const TemplateEditor = ({\n  configs\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const templateRef = useRef(null);\n  const config = useMemo(() => configs.filter(config => config.id === parseInt(id))[0], [id, configs]);\n  const [fields, setFields] = useState(config.fields);\n\n  const onChange = (fieldId, value) => {\n    setFields(prev => {\n      const result = prev.map(field => field.id === fieldId ? { ...field,\n        value: value\n      } : field);\n      return result;\n    });\n  };\n\n  const Template = config.component;\n  const templateFields = fields.reduce((result, field) => ({ ...result,\n    [field.id]: field.value\n  }), {});\n\n  const handleSave = async () => {\n    const html = templateRef.current.innerHTML;\n    const pageTitle = fields.filter(f => f.id === 'pageTitle');\n    const response = await pagesService.createPage(pageTitle.length > 0 ? pageTitle[0].value : config.name, config.thumbnail, html);\n    consoel.log('response create:page', response);\n    history.push('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TemplatePanel, {\n      fields: fields,\n      onChange: onChange,\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TemplateProvider, {\n      ref: templateRef,\n      children: /*#__PURE__*/_jsxDEV(Template, { ...templateFields\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TemplateEditor, \"Wtan/+SOnRfexhjxg7trfCJzOa8=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c3 = TemplateEditor;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TemplateProvider$forwardRef\");\n$RefreshReg$(_c2, \"TemplateProvider\");\n$RefreshReg$(_c3, \"TemplateEditor\");","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/components/TemplateEditor.js"],"names":["forwardRef","useMemo","useRef","useState","useHistory","useParams","pagesService","TemplatePanel","TemplateProvider","children","ref","TemplateEditor","configs","id","history","templateRef","config","filter","parseInt","fields","setFields","onChange","fieldId","value","prev","result","map","field","Template","component","templateFields","reduce","handleSave","html","current","innerHTML","pageTitle","f","response","createPage","length","name","thumbnail","consoel","log","push"],"mappings":"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","sourcesContent":["import { forwardRef, useMemo, useRef, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport pagesService from '../services/pages';\r\nimport { TemplatePanel } from './TemplatePanel';\r\n\r\nconst TemplateProvider = forwardRef(({ children }, ref) => {\r\n\treturn (\r\n\t\t<div ref={ref}>\r\n\t\t\t<link\r\n\t\t\t\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css\"\r\n\t\t\t\trel=\"stylesheet\"\r\n\t\t\t\tintegrity=\"sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x\"\r\n\t\t\t\tcrossorigin=\"anonymous\"\r\n\t\t\t></link>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport const TemplateEditor = ({ configs }) => {\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\tconst templateRef = useRef(null);\r\n\r\n\tconst config = useMemo(\r\n\t\t() => configs.filter(config => config.id === parseInt(id))[0],\r\n\t\t[id, configs]\r\n\t);\r\n\r\n\tconst [fields, setFields] = useState(config.fields);\r\n\r\n\tconst onChange = (fieldId, value) => {\r\n\t\tsetFields(prev => {\r\n\t\t\tconst result = prev.map(field =>\r\n\t\t\t\tfield.id === fieldId ? { ...field, value: value } : field\r\n\t\t\t);\r\n\t\t\treturn result;\r\n\t\t});\r\n\t};\r\n\r\n\tconst Template = config.component;\r\n\tconst templateFields = fields.reduce(\r\n\t\t(result, field) => ({\r\n\t\t\t...result,\r\n\t\t\t[field.id]: field.value,\r\n\t\t}),\r\n\t\t{}\r\n\t);\r\n\r\n\tconst handleSave = async () => {\r\n\t\tconst html = templateRef.current.innerHTML;\r\n\t\tconst pageTitle = fields.filter(f => f.id === 'pageTitle');\r\n\t\tconst response = await pagesService.createPage(\r\n\t\t\tpageTitle.length > 0 ? pageTitle[0].value : config.name,\r\n\t\t\tconfig.thumbnail,\r\n\t\t\thtml\r\n\t\t);\r\n\t\tconsoel.log('response create:page', response)\r\n\t\thistory.push('/');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<TemplatePanel\r\n\t\t\t\tfields={fields}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tonSave={handleSave}\r\n\t\t\t></TemplatePanel>\r\n\t\t\t<TemplateProvider ref={templateRef}>\r\n\t\t\t\t<Template {...templateFields} />\r\n\t\t\t</TemplateProvider>\r\n\t\t</div>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}