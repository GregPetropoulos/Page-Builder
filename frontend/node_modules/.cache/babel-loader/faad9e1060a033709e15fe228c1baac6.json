{"ast":null,"code":"import _objectSpread from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _assertThisInitialized from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _createForOfIteratorHelper from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as _getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var me = this;\n\n      if (me._request) {\n        return;\n      }\n\n      me._running = true;\n      me._request = requestAnimFrame.call(window, function () {\n        me._update();\n\n        me._request = null;\n\n        if (me._running) {\n          me._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var me = this;\n      var remaining = 0;\n\n      me._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          me._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          me._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      me._lastDate = date;\n\n      if (remaining === 0) {\n        me._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      var me = this;\n\n      if (me._active) {\n        me._notify(false);\n\n        var currentValue = me._target[me._prop];\n        var elapsed = date - me._start;\n        var remain = me._duration - elapsed;\n        me._start = date;\n        me._duration = Math.floor(Math.max(remain, cfg.duration));\n        me._total += elapsed;\n        me._loop = !!cfg.loop;\n        me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        me._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var me = this;\n\n      if (me._active) {\n        me.tick(Date.now());\n        me._active = false;\n\n        me._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var me = this;\n      var elapsed = date - me._start;\n      var duration = me._duration;\n      var prop = me._prop;\n      var from = me._from;\n      var loop = me._loop;\n      var to = me._to;\n      var factor;\n      me._active = from !== to && (loop || elapsed < duration);\n\n      if (!me._active) {\n        me._target[prop] = to;\n\n        me._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        me._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = me._easing(Math.min(1, Math.max(0, factor)));\n      me._target[prop] = me._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\n\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex, options) {\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas('bar').reverse()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  var axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  var _iterator3 = _createForOfIteratorHelper(items),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][meta.index];\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      me.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = me.getScaleForId(xid);\n      meta.yScale = me.getScaleForId(yid);\n      meta.rScale = me.getScaleForId(rid);\n      meta.iScale = me.getScaleForId(iid);\n      meta.vScale = me.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = me._data;\n\n      if (isObject(data)) {\n        me._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, me);\n          var meta = me._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._syncList = [];\n        me._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var me = this;\n      var meta = me._cachedMeta;\n\n      me._dataCheck();\n\n      if (me.datasetElementType) {\n        meta.dataset = new me.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = me.getDataset();\n      var stackChanged = false;\n\n      me._dataCheck();\n\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      me._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(me, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var config = me.chart.config;\n      var scopeKeys = config.datasetScopeKeys(me._type);\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n      me.options = config.createResolver(scopes, me.getContext());\n      me._parsing = me.options.parsing;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var me = this;\n      var meta = me._cachedMeta,\n          data = me._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (me._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = me.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = me.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = me.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(me, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index, {\n          all: true\n        });\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = me._getOtherScale(scale);\n\n      var stack = canStack && meta._stacked && {\n        keys: getSortedDatasetIndices(me.chart, true),\n        values: null\n      };\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, value, parsed, otherValue;\n\n      function _skip() {\n        parsed = _parsed[i];\n        value = parsed[scale.axis];\n        otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          me.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.configure();\n      me._cachedDataOpts = {};\n      me.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me._ctx;\n      var chart = me.chart;\n      var meta = me._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = me._drawStart || 0;\n      var count = me._drawCount || elements.length - start;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.active) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var context;\n\n      if (index >= 0 && index < me._cachedMeta.data.length) {\n        var element = me._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n        context.parsed = me.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = me.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var me = this;\n      var active = mode === 'active';\n      var cache = me._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = me.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = me.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return me.getContext(index, active);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var me = this;\n      var chart = me.chart;\n      var cache = me._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = me.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n        var scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, me.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var me = this;\n      var data = me._data;\n      var elements = me._cachedMeta.data;\n\n      var _iterator4 = _createForOfIteratorHelper(me._syncList),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n              method = _step4$value[0],\n              arg1 = _step4$value[1],\n              arg2 = _step4$value[2];\n\n          me[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      me._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        me.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        me._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        me._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var me = this;\n      var meta = me._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new me.dataElementType();\n      }\n\n      if (me._parsing) {\n        move(meta._parsed);\n      }\n\n      me.parse(start, count);\n\n      if (resetNewElements) {\n        me.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var me = this;\n      var meta = me._cachedMeta;\n\n      if (me._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._syncList.push(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      this._syncList.push(['_removeElements', start, count]);\n\n      this._syncList.push(['_insertElements', start, arguments.length - 2]);\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._syncList.push(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    var metas = scale.getMatchingVisibleMetas('bar');\n    var values = [];\n\n    for (var i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  var values = getAllScaleValues(scale);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  var _super = _createSuper(BarController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var me = this;\n      me.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = me._cachedMeta;\n      meta.stack = me.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      me.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var vScale = me._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = me._getRuler();\n\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = me.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : me._calculateBarValuePixels(i);\n\n        var ipixels = me._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        me.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(me._type);\n      var stacked = iScale.options.stacked;\n      var ilen = metasets.length;\n      var stacks = [];\n      var i, item;\n\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n\n        if (typeof dataIndex !== 'undefined') {\n          var val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n\n        if (item.index === last) {\n          break;\n        }\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(iScale);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: me._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var me = this;\n      var _me$_cachedMeta = me._cachedMeta,\n          vScale = _me$_cachedMeta.vScale,\n          _stacked = _me$_cachedMeta._stacked;\n      var _me$options = me.options,\n          baseValue = _me$options.base,\n          minBarLength = _me$options.minBarLength;\n      var parsed = me.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = size < 0 ? -minBarLength : minBarLength;\n\n        if (value === 0) {\n          base -= size / 2;\n        }\n\n        head = base + size;\n      }\n\n      var actualBase = baseValue || 0;\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n        if (size > 0) {\n          base += halfGrid;\n          size -= halfGrid;\n        } else if (size < 0) {\n          base -= halfGrid;\n          size += halfGrid;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var me = this;\n      var scale = ruler.scale;\n      var options = me.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        if (me.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(me._ctx);\n        }\n      }\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  var _super2 = _createSuper(BubbleController);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing3 = this._parsing,\n          _this$_parsing3$xAxis = _this$_parsing3.xAxisKey,\n          xAxisKey = _this$_parsing3$xAxis === void 0 ? 'x' : _this$_parsing3$xAxis,\n          _this$_parsing3$yAxis = _this$_parsing3.yAxisKey,\n          yAxisKey = _this$_parsing3$yAxis === void 0 ? 'y' : _this$_parsing3$yAxis;\n      var parsed = [];\n      var i, ilen, item;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        item = data[i];\n        parsed.push({\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n          _custom: item && item.r && +item.r\n        });\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var _this$_cachedMeta = this._cachedMeta,\n          data = _this$_cachedMeta.data,\n          _parsed = _this$_cachedMeta._parsed;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = me.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var points = me._cachedMeta.data;\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta2 = me._cachedMeta,\n          iScale = _me$_cachedMeta2.iScale,\n          vScale = _me$_cachedMeta2.vScale;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && me.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        me.updateElement(point, i, properties, mode);\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  var _super3 = _createSuper(DoughnutController);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this = _super3.call(this, chart, datasetIndex);\n    _this.enableOptionSharing = true;\n    _this.innerRadius = undefined;\n    _this.outerRadius = undefined;\n    _this.offsetX = undefined;\n    _this.offsetY = undefined;\n    return _this;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      var i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = +data[i];\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      var me = this;\n\n      for (var i = 0; i < me.chart.data.datasets.length; ++i) {\n        if (me.chart.isDatasetVisible(i)) {\n          var controller = me.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var meta = me._cachedMeta;\n      var arcs = meta.data;\n      var spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var _me$_getRotationExten = me._getRotationExtents(),\n          circumference = _me$_getRotationExten.circumference,\n          rotation = _me$_getRotationExten.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(me.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n      me.offsetX = offsetX * outerRadius;\n      me.offsetY = offsetY * outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n      me.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var me = this;\n      var opts = me.options;\n      var meta = me._cachedMeta;\n\n      var circumference = me._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n        return 0;\n      }\n\n      return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : me.innerRadius;\n      var outerRadius = animateScale ? 0 : me.outerRadius;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n\n      var startAngle = me._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += me._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = me._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + me.offsetX,\n          y: centerY + me.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        me.updateElement(arc, i, properties, mode);\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n\n            if (controller !== me) {\n              controller.configure();\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  var _super4 = _createSuper(LineController);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = me.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      me._drawStart = start;\n      me._drawCount = count;\n\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = me.options.segment;\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      me.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var _me$_cachedMeta3 = me._cachedMeta,\n          iScale = _me$_cachedMeta3.iScale,\n          vScale = _me$_cachedMeta3.vScale,\n          _stacked = _me$_cachedMeta3._stacked;\n      var firstOpts = me.resolveDataElementOptions(start, mode);\n      var sharedOptions = me.getSharedOptions(firstOpts);\n      var includeOptions = me.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var spanGaps = me.options.spanGaps;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && me.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = me.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        properties.parsed = parsed;\n\n        if (includeOptions) {\n          properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          me.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var me = this;\n      var meta = me._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(me.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n        _parsed = meta._parsed;\n    var axis = iScale.axis;\n\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n        min = _iScale$getUserBounds.min,\n        max = _iScale$getUserBounds.max,\n        minDefined = _iScale$getUserBounds.minDefined,\n        maxDefined = _iScale$getUserBounds.maxDefined;\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale,\n      _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  var _super5 = _createSuper(PolarAreaController);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this2;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this2 = _super5.call(this, chart, datasetIndex);\n    _this2.innerRadius = undefined;\n    _this2.outerRadius = undefined;\n    return _this2;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var chart = me.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = outerRadius - radiusLength * me.index;\n      me.innerRadius = me.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var me = this;\n      var reset = mode === 'reset';\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = me._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / me.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += me._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        me.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this3 = this;\n\n      var dataset = this.getDataset();\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(dataset.data[index]) && _this3.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  var _super6 = _createSuper(PieController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return PieController;\n}(DoughnutController);\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  var _super7 = _createSuper(RadarController);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var me = this;\n      var vScale = me._cachedMeta.vScale;\n      var parsed = me.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var meta = me._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = me.resolveDatasetElementOptions(mode);\n\n        if (!me.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        me.updateElement(line, undefined, properties, mode);\n      }\n\n      me.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var me = this;\n      var dataset = me.getDataset();\n      var scale = me._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        me.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nvar ScatterController = /*#__PURE__*/function (_LineController) {\n  _inherits(ScatterController, _LineController);\n\n  var _super8 = _createSuper(ScatterController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _super8.apply(this, arguments);\n  }\n\n  return ScatterController;\n}(LineController);\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n\n    this.options = options || {};\n  }\n\n  _createClass(DateAdapter, [{\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n\n  return DateAdapter;\n}();\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var index, data, element;\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i];\n    index = _metasets$i.index;\n    data = _metasets$i.data;\n\n    for (var j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i2 = metasets[i],\n        index = _metasets$i2.index,\n        data = _metasets$i2.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  var items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  var position = getRelativePosition(e, chart);\n  var items = [];\n  var axis = options.axis;\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateAllVisibleItems(chart, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  var box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  var userPadding = params.padding;\n  var x = chartArea.x;\n  var y = chartArea.y;\n  var i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  var _super9 = _createSuper(BasicPlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition$ = getRelativePosition$1(event, chart),\n      x = _getRelativePosition$.x,\n      y = _getRelativePosition$.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  var element = container || canvas;\n  var observer = new MutationObserver(function (entries) {\n    var parent = _getParentNode(element);\n\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.addedNodes.length; i++) {\n        var added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var observer = new MutationObserver(function (entries) {\n    entries.forEach(function (entry) {\n      for (var i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  var _super10 = _createSuper(DomPlatform);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n\n      return !!(container && _getParentNode(container));\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var me = this;\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        return me;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n\n  var _super11 = _createSuper(Scale);\n\n  function Scale(cfg) {\n    var _this4;\n\n    _classCallCheck(this, Scale);\n\n    _this4 = _super11.call(this);\n    _this4.id = cfg.id;\n    _this4.type = cfg.type;\n    _this4.options = undefined;\n    _this4.ctx = cfg.ctx;\n    _this4.chart = cfg.chart;\n    _this4.top = undefined;\n    _this4.bottom = undefined;\n    _this4.left = undefined;\n    _this4.right = undefined;\n    _this4.width = undefined;\n    _this4.height = undefined;\n    _this4._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this4.maxWidth = undefined;\n    _this4.maxHeight = undefined;\n    _this4.paddingTop = undefined;\n    _this4.paddingBottom = undefined;\n    _this4.paddingLeft = undefined;\n    _this4.paddingRight = undefined;\n    _this4.axis = undefined;\n    _this4.labelRotation = undefined;\n    _this4.min = undefined;\n    _this4.max = undefined;\n    _this4._range = undefined;\n    _this4.ticks = [];\n    _this4._gridLineItems = null;\n    _this4._labelItems = null;\n    _this4._labelSizes = null;\n    _this4._length = 0;\n    _this4._maxLength = 0;\n    _this4._longestTextCache = {};\n    _this4._startPixel = undefined;\n    _this4._endPixel = undefined;\n    _this4._reversePixels = false;\n    _this4._userMax = undefined;\n    _this4._userMin = undefined;\n    _this4._suggestedMax = undefined;\n    _this4._suggestedMin = undefined;\n    _this4._ticksLength = 0;\n    _this4._borderValue = 0;\n    _this4._cache = {};\n    _this4._dataLimitsCached = false;\n    _this4.$context = undefined;\n    return _this4;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      var me = this;\n      me.options = options.setContext(me.getContext());\n      me.axis = options.axis;\n      me._userMin = me.parse(options.min);\n      me._userMax = me.parse(options.max);\n      me._suggestedMin = me.parse(options.suggestedMin);\n      me._suggestedMax = me.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var me = this;\n\n      var _me$getUserBounds = me.getUserBounds(),\n          min = _me$getUserBounds.min,\n          max = _me$getUserBounds.max,\n          minDefined = _me$getUserBounds.minDefined,\n          maxDefined = _me$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = me.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(me, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      me.beforeUpdate();\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me.ticks = null;\n      me._labelSizes = null;\n      me._gridLineItems = null;\n      me._labelItems = null;\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions();\n      me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n      if (!me._dataLimitsCached) {\n        me.beforeDataLimits();\n        me.determineDataLimits();\n        me.afterDataLimits();\n        me._range = _addGrace(me, me.options.grace);\n        me._dataLimitsCached = true;\n      }\n\n      me.beforeBuildTicks();\n      me.ticks = me.buildTicks() || [];\n      me.afterBuildTicks();\n      var samplingEnabled = sampleSize < me.ticks.length;\n\n      me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n      me.configure();\n      me.beforeCalculateLabelRotation();\n      me.calculateLabelRotation();\n      me.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        me.ticks = autoSkip(me, me.ticks);\n        me._labelSizes = null;\n      }\n\n      if (samplingEnabled) {\n        me._convertTicksToLabels(me.ticks);\n      }\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit();\n      me.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var reversePixels = me.options.reverse;\n      var startPixel, endPixel;\n\n      if (me.isHorizontal()) {\n        startPixel = me.left;\n        endPixel = me.right;\n      } else {\n        startPixel = me.top;\n        endPixel = me.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      me._startPixel = startPixel;\n      me._endPixel = endPixel;\n      me._reversePixels = reversePixels;\n      me._length = endPixel - startPixel;\n      me._alignToPixels = me.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = 0;\n        me.bottom = me.height;\n      }\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      var me = this;\n      me.chart.notifyPlugins(name, me.getContext());\n      callback(me.options[name], [me]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var me = this;\n      var options = me.options;\n      var tickOpts = options.ticks;\n      var numTicks = me.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n        me.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = me._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n      tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      me.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = me.chart,\n          _me$options2 = me.options,\n          tickOpts = _me$options2.ticks,\n          titleOpts = _me$options2.title,\n          gridOpts = _me$options2.grid;\n\n      var display = me._isVisible();\n\n      var isHorizontal = me.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = me.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = me.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && me.ticks.length) {\n          var _me$_getLabelSizes = me._getLabelSizes(),\n              first = _me$_getLabelSizes.first,\n              last = _me$_getLabelSizes.last,\n              widest = _me$_getLabelSizes.widest,\n              highest = _me$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(me.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          me._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      me._handleMargins();\n\n      if (isHorizontal) {\n        me.width = me._length = chart.width - me._margins.left - me._margins.right;\n        me.height = minSize.height;\n      } else {\n        me.width = minSize.width;\n        me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var me = this;\n      var _me$options3 = me.options,\n          _me$options3$ticks = _me$options3.ticks,\n          align = _me$options3$ticks.align,\n          padding = _me$options3$ticks.padding,\n          position = _me$options3.position;\n      var isRotated = me.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n      if (me.isHorizontal()) {\n        var offsetLeft = me.getPixelForTick(0) - me.left;\n        var offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n        me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        me.paddingTop = paddingTop + padding;\n        me.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      var me = this;\n\n      if (me._margins) {\n        me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n        me._margins.top = Math.max(me.paddingTop, me._margins.top);\n        me._margins.right = Math.max(me.paddingRight, me._margins.right);\n        me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options = this.options,\n          axis = _this$options.axis,\n          position = _this$options.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      var me = this;\n      me.beforeTickToLabelConversion();\n      me.generateTickLabels(ticks);\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      me.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var me = this;\n      var labelSizes = me._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = me.options.ticks.sampleSize;\n        var ticks = me.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = me._startPixel + decimal * me._length;\n      return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var me = this;\n      var ticks = me.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n      }\n\n      return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var me = this;\n      var optionTicks = me.options.ticks;\n      var rot = toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = me._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var chart = me.chart;\n      var options = me.options;\n      var grid = options.grid,\n          position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(me.bottom);\n        ty1 = me.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(me.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(me.right);\n        tx1 = me.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(me.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = me.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID = Object.keys(position)[0];\n          var _value = position[_positionAxisID];\n          borderValue = alignBorderValue(me.chart.scales[_positionAxisID].getPixelForValue(_value));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(me.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = grid.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(me, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      me._ticksLength = ticksLength;\n      me._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var me = this;\n      var axis = me.axis;\n      var options = me.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = me.isHorizontal();\n      var ticks = me.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(me.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = me.bottom - hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = me.top + hTickAndPadding;\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = me._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = me._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = me._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          x = me.chart.scales[_positionAxisID2].getPixelForValue(_value2);\n        }\n\n        textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = me._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(me.getContext(i));\n        pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n        font = me._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: textAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var me = this;\n      var _me$options4 = me.options,\n          position = _me$options4.position,\n          ticks = _me$options4.ticks;\n      var rotation = -toRadians(me.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var me = this;\n      var _me$options5 = me.options,\n          position = _me$options5.position,\n          _me$options5$ticks = _me$options5.ticks,\n          crossAlign = _me$options5$ticks.crossAlign,\n          mirror = _me$options5$ticks.mirror,\n          padding = _me$options5$ticks.padding;\n\n      var labelSizes = me._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          textAlign = 'left';\n          x = me.right + padding;\n        } else {\n          x = me.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = me.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          textAlign = 'right';\n          x = me.left + padding;\n        } else {\n          x = me.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = me.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      var me = this;\n\n      if (me.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = me.chart;\n      var position = me.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: me.left,\n          bottom: chart.height,\n          right: me.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: me.top,\n          left: 0,\n          bottom: me.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var me = this;\n      var grid = me.options.grid;\n\n      if (!me._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = me.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(me.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var me = this;\n      var grid = me.options.grid;\n      var ctx = me.ctx;\n\n      var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var me = this;\n      var chart = me.chart,\n          ctx = me.ctx,\n          grid = me.options.grid;\n      var borderOpts = grid.setContext(me.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n      var borderValue = me._borderValue;\n      var x1, x2, y1, y2;\n\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var me = this;\n      var optionTicks = me.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = me.ctx;\n\n      var area = me._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n      var i, ilen;\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options2 = this.options,\n          position = _this$options2.position,\n          title = _this$options2.title,\n          reverse = _this$options2.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom') {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      var me = this;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      me.drawBackground();\n      me.drawGrid(chartArea);\n      me.drawBorder();\n      me.drawTitle();\n      me.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var me = this;\n      var opts = me.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = opts.grid && opts.grid.z || 0;\n\n      if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            me.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          me.drawBackground();\n          me.drawGrid(chartArea);\n          me.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          me.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          me.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var me = this;\n      var metas = me.chart.getSortedVisibleDatasetMetas();\n      var axisID = me.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === me.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var me = this;\n\n      var fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n      return (me.isHorizontal() ? me.width : me.height) / fontSize;\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var me = this;\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = me.register(proto);\n      }\n\n      var items = me.items;\n      var id = item.id;\n      var scope = me.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (me.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var me = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || me._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n          me._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || me._getRegistryForType(item);\n\n            me._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = new Registry();\n\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      var me = this;\n\n      if (hook === 'beforeInit') {\n        me._init = me._createDescriptors(chart, true);\n\n        me._notify(me._init, chart, 'install');\n      }\n\n      var descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n      var result = me._notify(descriptors, chart, hook, args);\n\n      if (hook === 'destroy') {\n        me._notify(descriptors, chart, 'stop');\n\n        me._notify(me._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      var _iterator5 = _createForOfIteratorHelper(descriptors),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var descriptor = _step5.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  var result = [];\n  var context = chart.getContext();\n\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i];\n    var id = plugin.id;\n    var opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin: plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iterator6 = _createForOfIteratorHelper(names),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var prop = _step6.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iterator7 = _createForOfIteratorHelper(names),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var prop = _step7.value;\n\n      if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  return false;\n}\n\nvar version = \"3.4.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, config) {\n    var _this5 = this;\n\n    _classCallCheck(this, Chart);\n\n    var me = this;\n    this.config = config = new Config(config);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    var context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function () {\n      return _this5.update('resize');\n    }, options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options3 = this.options,\n          aspectRatio = _this$options3.aspectRatio,\n          maintainAspectRatio = _this$options3.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      var me = this;\n      me.notifyPlugins('beforeInit');\n\n      if (me.options.responsive) {\n        me.resize();\n      } else {\n        retinaScale(me, me.options.devicePixelRatio);\n      }\n\n      me.bindEvents();\n      me.notifyPlugins('afterInit');\n      return me;\n    }\n  }, {\n    key: \"_initializePlatform\",\n    value: function _initializePlatform(canvas, config) {\n      if (config.platform) {\n        return new config.platform();\n      } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return new BasicPlatform();\n      }\n\n      return new DomPlatform();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n      var newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n      me.width = newSize.width;\n      me.height = newSize.height;\n      me._aspectRatio = me.aspectRatio;\n\n      if (!retinaScale(me, newRatio, true)) {\n        return;\n      }\n\n      me.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [me, newSize], me);\n\n      if (me.attached) {\n        if (me._doResize()) {\n          me.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scaleOpts = options.scales;\n      var scales = me.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(me, scale, scale.options);\n        layouts.addBox(me, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var me = this;\n      var metasets = me._metasets;\n      var numData = me.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          me._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var me = this;\n      var metasets = me._metasets,\n          datasets = me.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete me._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          me._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      var datasets = me.data.datasets;\n      var i, ilen;\n\n      me._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = me.getDatasetMeta(i);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me._destroyDatasetMeta(i);\n\n          meta = me.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = me.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(me, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      me._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var me = this;\n      each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var me = this;\n      var config = me.config;\n      config.update();\n      me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n      each(me.scales, function (scale) {\n        layouts.removeBox(me, scale);\n      });\n      var animsDisabled = me._animationsDisabled = !me.options.animation;\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      var existingEvents = new Set(Object.keys(me._listeners));\n      var newEvents = new Set(me.options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n        me.unbindEvents();\n        me.bindEvents();\n      }\n\n      me._plugins.invalidate();\n\n      if (me.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = me.buildOrUpdateControllers();\n      me.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n        var _me$getDatasetMeta = me.getDatasetMeta(i),\n            controller = _me$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      me._minPadding = minPadding;\n\n      me._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me._updateDatasets(mode);\n\n      me.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      me._layers.sort(compare2Level('z', '_idx'));\n\n      if (me._lastEvent) {\n        me._eventHandler(me._lastEvent, true);\n      }\n\n      me.render();\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var me = this;\n\n      if (me.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(me, me.width, me.height, minPadding);\n      var area = me.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      me._layers = [];\n      each(me.boxes, function (box) {\n        var _me$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_me$_layers = me._layers).push.apply(_me$_layers, _toConsumableArray(box._layers()));\n      }, me);\n\n      me._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      me.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      var me = this;\n      var isFunction = typeof mode === 'function';\n\n      if (me.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._updateDataset(i, isFunction ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n\n      me.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var me = this;\n\n      if (me.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(me)) {\n        if (me.attached && !animator.running(me)) {\n          animator.start(me);\n        }\n      } else {\n        me.draw();\n        onAnimationsComplete({\n          chart: me\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var i;\n\n      if (me._resizeBeforeDraw) {\n        var _me$_resizeBeforeDraw = me._resizeBeforeDraw,\n            width = _me$_resizeBeforeDraw.width,\n            height = _me$_resizeBeforeDraw.height;\n\n        me._resize(width, height);\n\n        me._resizeBeforeDraw = null;\n      }\n\n      me.clear();\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (me.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = me._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n\n      me._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(me.chartArea);\n      }\n\n      me.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var me = this;\n      var metasets = me._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      var me = this;\n\n      if (me.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = me.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        me._drawDataset(metasets[i]);\n      }\n\n      me.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var me = this;\n      var ctx = me.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = me.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? me.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      me.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n      var metasets = me._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = {\n        chart: this,\n        type: 'chart'\n      });\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateDatasetVisibility\",\n    value: function _updateDatasetVisibility(datasetIndex, visible) {\n      var me = this;\n      var mode = visible ? 'show' : 'hide';\n      var meta = me.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      me.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible: visible\n      });\n      me.update(function (ctx) {\n        return ctx.datasetIndex === datasetIndex ? mode : undefined;\n      });\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex) {\n      this._updateDatasetVisibility(datasetIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var me = this;\n      var meta = me._metasets && me._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n\n        delete me._metasets[datasetIndex];\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var me = this;\n      var canvas = me.canvas,\n          ctx = me.ctx;\n      var i, ilen;\n      me.stop();\n      animator.remove(me);\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      me.config.clearCache();\n\n      if (canvas) {\n        me.unbindEvents();\n        clearCanvas(canvas, ctx);\n        me.platform.releaseContext(ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      me.notifyPlugins('destroy');\n      delete instances[me.id];\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var me = this;\n      var listeners = me._listeners;\n      var platform = me.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        me._eventHandler(e);\n      };\n\n      each(me.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var me = this;\n\n      if (!me._responsiveListeners) {\n        me._responsiveListeners = {};\n      }\n\n      var listeners = me._responsiveListeners;\n      var platform = me.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(me, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(width, height) {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n\n      var detached;\n\n      var attached = function attached() {\n        _remove('attach', attached);\n\n        me.attached = true;\n        me.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = function detached() {\n        me.attached = false;\n\n        _remove('resize', listener);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var me = this;\n      each(me._listeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._listeners = {};\n      each(me._responsiveListeners, function (listener, type) {\n        me.platform.removeEventListener(me, type, listener);\n      });\n      me._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var me = this;\n      var lastActive = me._active || [];\n      var active = activeElements.map(function (_ref) {\n        var datasetIndex = _ref.datasetIndex,\n            index = _ref.index;\n        var meta = me.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        me._active = active;\n\n        me._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var me = this;\n      var hoverOptions = me.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        me.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this6 = this;\n\n      var me = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this6.options.events).includes(e.type);\n      };\n\n      if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = me._handleEvent(e, replay);\n\n      args.cancelable = false;\n      me.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        me.render();\n      }\n\n      return me;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay) {\n      var me = this;\n      var _me$_active = me._active,\n          lastActive = _me$_active === void 0 ? [] : _me$_active,\n          options = me.options;\n      var hoverOptions = options.hover;\n      var useFinalPosition = replay;\n      var active = [];\n      var changed = false;\n      var lastEvent = null;\n\n      if (e.type !== 'mouseout') {\n        active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n        lastEvent = e.type === 'click' ? me._lastEvent : e;\n      }\n\n      me._lastEvent = null;\n\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onHover, [e, active, me], me);\n\n        if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n          callback(options.onClick, [e, active, me], me);\n        }\n      }\n\n      changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        me._active = active;\n\n        me._updateHoverStyles(active, lastActive, replay);\n      }\n\n      me._lastEvent = lastEvent;\n      return changed;\n    }\n  }]);\n\n  return Chart;\n}();\n\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\n\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  var x = element.x,\n      y = element.y,\n      start = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n    ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference;\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n      y = element.y,\n      startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  var options = element.options;\n  var inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  var _super12 = _createSuper(ArcElement);\n\n  function ArcElement(cfg) {\n    var _this7;\n\n    _classCallCheck(this, ArcElement);\n\n    _this7 = _super12.call(this);\n    _this7.options = undefined;\n    _this7.circumference = undefined;\n    _this7.startAngle = undefined;\n    _this7.endAngle = undefined;\n    _this7.innerRadius = undefined;\n    _this7.outerRadius = undefined;\n    _this7.pixelMargin = 0;\n    _this7.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this7), cfg);\n    }\n\n    return _this7;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint.angle,\n          distance = _getAngleFromPoint.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var rAdjust = this.options.spacing / 2;\n\n      var betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n      var withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var _this$options4 = this.options,\n          offset = _this$options4.offset,\n          spacing = _this$options4.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options,\n          circumference = me.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      var radiusOffset = 0;\n\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (me.startAngle + me.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n        if (me.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, me, radiusOffset, spacing);\n      drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref2 = params || {},\n      _ref2$move = _ref2.move,\n      move = _ref2$move === void 0 ? true : _ref2$move,\n      reverse = _ref2.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref3 = params || {},\n      _ref3$move = _ref3.move,\n      move = _ref3$move === void 0 ? true : _ref3$move,\n      reverse = _ref3.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iterator8 = _createForOfIteratorHelper(segments),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var segment = _step8.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  var _super13 = _createSuper(LineElement);\n\n  function LineElement(cfg) {\n    var _this8;\n\n    _classCallCheck(this, LineElement);\n\n    _this8 = _super13.call(this);\n    _this8.animated = true;\n    _this8.options = undefined;\n    _this8._loop = undefined;\n    _this8._fullLoop = undefined;\n    _this8._path = undefined;\n    _this8._points = undefined;\n    _this8._segments = undefined;\n    _this8._decimated = false;\n    _this8._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this8), cfg);\n    }\n\n    return _this8;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var me = this;\n      var options = me.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n        var loop = options.spanGaps ? me._loop : me._fullLoop;\n\n        _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n\n        me._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      var me = this;\n      me._points = points;\n      delete me._segments;\n      delete me._path;\n      me._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var me = this;\n      var options = me.options;\n      var value = point[property];\n      var points = me.points;\n\n      var segments = _boundSegments(me, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var me = this;\n      var segments = me.segments;\n\n      var segmentMethod = _getSegmentMethod(me);\n\n      var loop = me._loop;\n      start = start || 0;\n      count = count || me.points.length - start;\n\n      var _iterator9 = _createForOfIteratorHelper(segments),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var segment = _step9.value;\n          loop &= segmentMethod(ctx, me, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var me = this;\n      var options = me.options || {};\n      var points = me.points || [];\n\n      if (!points.length || !options.borderWidth) {\n        return;\n      }\n\n      ctx.save();\n\n      _draw(ctx, me, start, count);\n\n      ctx.restore();\n\n      if (me.animated) {\n        me._pointsUpdated = false;\n        me._path = undefined;\n      }\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  var _super14 = _createSuper(PointElement);\n\n  function PointElement(cfg) {\n    var _this9;\n\n    _classCallCheck(this, PointElement);\n\n    _this9 = _super14.call(this);\n    _this9.options = undefined;\n    _this9.parsed = undefined;\n    _this9.skip = undefined;\n    _this9.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this9), cfg);\n    }\n\n    return _this9;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options;\n\n      if (me.skip || options.radius < 0.1) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, me.x, me.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  var edge = bar.options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = parseBorderSkipped(bar);\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = parseBorderSkipped(bar);\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  var _super15 = _createSuper(BarElement);\n\n  function BarElement(cfg) {\n    var _this10;\n\n    _classCallCheck(this, BarElement);\n\n    _this10 = _super15.call(this);\n    _this10.options = undefined;\n    _this10.horizontal = undefined;\n    _this10.base = undefined;\n    _this10.width = undefined;\n    _this10.height = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this10), cfg);\n    }\n\n    return _this10;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, outer);\n        ctx.clip();\n        addRectPath(ctx, inner);\n        ctx.fillStyle = options.borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds2 = iScale.getUserBounds(),\n      min = _iScale$getUserBounds2.min,\n      max = _iScale$getUserBounds2.max,\n      minDefined = _iScale$getUserBounds2.minDefined,\n      maxDefined = _iScale$getUserBounds2.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi2 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var target = [];\n  var start = options.reverse ? scale.max : scale.min;\n  var end = options.reverse ? scale.min : scale.max;\n  var i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  var _ref4 = boundary || {},\n      _ref4$x = _ref4.x,\n      x = _ref4$x === void 0 ? null : _ref4$x,\n      _ref4$y = _ref4.y,\n      y = _ref4$y === void 0 ? null : _ref4$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref5) {\n    var start = _ref5.start,\n        end = _ref5.end;\n    end = findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  var chart = source.chart,\n      scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nvar isLineAndNotInHideAnimation = function isLineAndNotInHideAnimation(meta) {\n  return meta.type === 'line' && !meta.hidden;\n};\n\nfunction getLinesBelow(chart, index) {\n  var below = [];\n  var metas = chart.getSortedVisibleDatasetMetas();\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nfunction getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n\n  var _iterator10 = _createForOfIteratorHelper(segments),\n      _step10;\n\n  try {\n    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      var segment = _step10.value;\n      var start = segment.start,\n          end = segment.end;\n      end = findSegmentEnd(start, end, points);\n      var bounds = getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iterator11 = _createForOfIteratorHelper(targetSegments),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var tgt = _step11.value;\n          var subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iterator12 = _createForOfIteratorHelper(fillSources),\n              _step12;\n\n          try {\n            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n              var fillSource = _step12.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator12.e(err);\n          } finally {\n            _iterator12.f();\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref6 = bounds || {},\n      property = _ref6.property,\n      start = _ref6.start,\n      end = _ref6.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iterator13 = _createForOfIteratorHelper(segments),\n      _step13;\n\n  try {\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      var _step13$value = _step13.value,\n          src = _step13$value.source,\n          tgt = _step13$value.target,\n          start = _step13$value.start,\n          end = _step13$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      var targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      var loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  var target = getTarget(source);\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref7 = fillOption || {},\n      _ref7$above = _ref7.above,\n      above = _ref7$above === void 0 ? color : _ref7$above,\n      _ref7$below = _ref7.below,\n      below = _ref7$below === void 0 ? color : _ref7$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n\n  var _super16 = _createSuper(Legend);\n\n  function Legend(config) {\n    var _this11;\n\n    _classCallCheck(this, Legend);\n\n    _this11 = _super16.call(this);\n    _this11._added = false;\n    _this11.legendHitBoxes = [];\n    _this11._hoveredItem = null;\n    _this11.doughnutMode = false;\n    _this11.chart = config.chart;\n    _this11.options = config.options;\n    _this11.ctx = config.ctx;\n    _this11.legendItems = undefined;\n    _this11.columnSizes = undefined;\n    _this11.lineWidths = undefined;\n    _this11.maxHeight = undefined;\n    _this11.maxWidth = undefined;\n    _this11.top = undefined;\n    _this11.bottom = undefined;\n    _this11.left = undefined;\n    _this11.right = undefined;\n    _this11.height = undefined;\n    _this11.width = undefined;\n    _this11._margins = undefined;\n    _this11.position = undefined;\n    _this11.weight = undefined;\n    _this11.fullSize = undefined;\n    return _this11;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me._margins = margins;\n      me.setDimensions();\n      me.buildLabels();\n      me.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        me.width = me.maxWidth;\n        me.left = me._margins.left;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight;\n        me.top = me._margins.top;\n        me.bottom = me.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var options = me.options,\n          ctx = me.ctx;\n\n      if (!options.display) {\n        me.width = me.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = me._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (me.isHorizontal()) {\n        width = me.maxWidth;\n        height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = me.maxHeight;\n        width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n\n      me.width = Math.min(width, options.maxWidth || me.maxWidth);\n      me.height = Math.min(height, options.maxHeight || me.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n          maxWidth = me.maxWidth,\n          padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var lineWidths = me.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var me = this;\n      var ctx = me.ctx,\n          maxHeight = me.maxHeight,\n          padding = me.options.labels.padding;\n      var hitboxes = me.legendHitBoxes = [];\n      var columnSizes = me.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      me.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      var me = this;\n\n      if (!me.options.display) {\n        return;\n      }\n\n      var titleHeight = me._computeTitleHeight();\n\n      var hitboxes = me.legendHitBoxes,\n          _me$options6 = me.options,\n          align = _me$options6.align,\n          padding = _me$options6.labels.padding,\n          rtl = _me$options6.rtl;\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n        var _iterator14 = _createForOfIteratorHelper(hitboxes),\n            _step14;\n\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var hitbox = _step14.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n            }\n\n            hitbox.top += me.top + titleHeight + padding;\n            hitbox.left = left;\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n\n        if (rtl) {\n          var boxMap = hitboxes.reduce(function (map, box) {\n            map[box.row] = map[box.row] || [];\n            map[box.row].push(box);\n            return map;\n          }, {});\n          var newBoxes = [];\n          Object.keys(boxMap).forEach(function (key) {\n            boxMap[key].reverse();\n            newBoxes.push.apply(newBoxes, _toConsumableArray(boxMap[key]));\n          });\n          me.legendHitBoxes = newBoxes;\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n        var _iterator15 = _createForOfIteratorHelper(hitboxes),\n            _step15;\n\n        try {\n          for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n            var _hitbox = _step15.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += me.left + padding;\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator15.e(err);\n        } finally {\n          _iterator15.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n\n      if (me.options.display) {\n        var ctx = me.ctx;\n        clipArea(ctx, me);\n\n        me._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var me = this;\n      var opts = me.options,\n          columnSizes = me.columnSizes,\n          lineWidths = me.lineWidths,\n          ctx = me.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n          padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      me.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      var isHorizontal = me.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n          y: me.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + padding,\n          y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(me.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      me.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(me.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > me.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > me.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(me.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var me = this;\n      var opts = me.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n      var ctx = me.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = me.left;\n      var maxWidth = me.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(me.lineWidths));\n        y = me.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n      } else {\n        var maxHeight = me.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove') {\n        var previous = me._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, me], me);\n        }\n\n        me._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, me], me);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, me], me);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n\n  var _super17 = _createSuper(Title);\n\n  function Title(config) {\n    var _this12;\n\n    _classCallCheck(this, Title);\n\n    _this12 = _super17.call(this);\n    _this12.chart = config.chart;\n    _this12.options = config.options;\n    _this12.ctx = config.ctx;\n    _this12._padding = undefined;\n    _this12.top = undefined;\n    _this12.bottom = undefined;\n    _this12.left = undefined;\n    _this12.right = undefined;\n    _this12.width = undefined;\n    _this12.height = undefined;\n    _this12.position = undefined;\n    _this12.weight = undefined;\n    _this12.fullSize = undefined;\n    return _this12;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var me = this;\n      var opts = me.options;\n      me.left = 0;\n      me.top = 0;\n\n      if (!opts.display) {\n        me.width = me.height = me.right = me.bottom = 0;\n        return;\n      }\n\n      me.width = me.right = maxWidth;\n      me.height = me.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      me._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n      if (me.isHorizontal()) {\n        me.height = textSize;\n      } else {\n        me.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + me._padding.top;\n\n      var _me$_drawArgs = me._drawArgs(offset),\n          titleX = _me$_drawArgs.titleX,\n          titleY = _me$_drawArgs.titleY,\n          maxWidth = _me$_drawArgs.maxWidth,\n          rotation = _me$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip._chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  var _super18 = _createSuper(Tooltip);\n\n  function Tooltip(config) {\n    var _this13;\n\n    _classCallCheck(this, Tooltip);\n\n    _this13 = _super18.call(this);\n    _this13.opacity = 0;\n    _this13._active = [];\n    _this13._chart = config._chart;\n    _this13._eventPosition = undefined;\n    _this13._size = undefined;\n    _this13._cachedAnimations = undefined;\n    _this13._tooltipItems = [];\n    _this13.$animations = undefined;\n    _this13.$context = undefined;\n    _this13.options = config.options;\n    _this13.dataPoints = undefined;\n    _this13.title = undefined;\n    _this13.beforeBody = undefined;\n    _this13.body = undefined;\n    _this13.afterBody = undefined;\n    _this13.footer = undefined;\n    _this13.xAlign = undefined;\n    _this13.yAlign = undefined;\n    _this13.x = undefined;\n    _this13.y = undefined;\n    _this13.height = undefined;\n    _this13.width = undefined;\n    _this13.caretX = undefined;\n    _this13.caretY = undefined;\n    _this13.labelColors = undefined;\n    _this13.labelPointStyles = undefined;\n    _this13.labelTextColors = undefined;\n    return _this13;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var me = this;\n      var cached = me._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = me._chart;\n      var options = me.options.setContext(me.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(me._chart, opts);\n\n      if (opts._cacheable) {\n        me._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      var me = this;\n      return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n      var title = callbacks.title.apply(me, [context]);\n      var afterTitle = callbacks.afterTitle.apply(me, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var me = this;\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n      var footer = callbacks.footer.apply(me, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var me = this;\n      var active = me._active;\n      var data = me._chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(me._chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(me, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n        labelTextColors.push(scoped.labelTextColor.call(me, context));\n      });\n      me.labelColors = labelColors;\n      me.labelPointStyles = labelPointStyles;\n      me.labelTextColors = labelTextColors;\n      me.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var active = me._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (me.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(me, active, me._eventPosition);\n        tooltipItems = me._createItems(options);\n        me.title = me.getTitle(tooltipItems, options);\n        me.beforeBody = me.getBeforeBody(tooltipItems, options);\n        me.body = me.getBody(tooltipItems, options);\n        me.afterBody = me.getAfterBody(tooltipItems, options);\n        me.footer = me.getFooter(tooltipItems, options);\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(me._chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      me._tooltipItems = tooltipItems;\n      me.$context = undefined;\n\n      if (properties) {\n        me._resolveAnimations().update(me, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(me, {\n          chart: me._chart,\n          tooltip: me,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var cornerRadius = options.cornerRadius,\n          caretSize = options.caretSize;\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var me = this;\n      var title = me.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var me = this;\n      var labelColors = me.labelColors[i];\n      var labelPointStyle = me.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(me, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = me.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var me = this;\n      var body = me.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(me.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = me.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(me.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var me = this;\n      var footer = me.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n        pt.x = getAlignedX(me, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n      var radius = options.cornerRadius;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var me = this;\n      var chart = me._chart;\n      var anims = me.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = me._size = getTooltipSize(me, options);\n        var positionAndSize = Object.assign({}, position, me._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          me.xAlign = alignment.xAlign;\n          me.yAlign = alignment.yAlign;\n          me.width = size.width;\n          me.height = size.height;\n          me.caretX = position.x;\n          me.caretY = position.y;\n\n          me._resolveAnimations().update(me, point);\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var me = this;\n      var options = me.options.setContext(me.getContext());\n      var opacity = me.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      me._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: me.width,\n        height: me.height\n      };\n      var pt = {\n        x: me.x,\n        y: me.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        me.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        me.drawTitle(pt, ctx, options);\n        me.drawBody(pt, ctx, options);\n        me.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var me = this;\n      var lastActive = me._active;\n      var active = activeElements.map(function (_ref8) {\n        var datasetIndex = _ref8.datasetIndex,\n            index = _ref8.index;\n\n        var meta = me._chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = me._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        me._active = active;\n        me._eventPosition = eventPosition;\n        me.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var me = this;\n      var options = me.options;\n      var lastActive = me._active || [];\n      var changed = false;\n      var active = [];\n\n      if (e.type !== 'mouseout') {\n        active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n        if (options.reverse) {\n          active.reverse();\n        }\n      }\n\n      var positionChanged = me._positionChanged(active, e);\n\n      changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        me._active = active;\n\n        if (options.enabled || options.external) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    var args = {\n      tooltip: tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        var label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        var value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index) {\n  return typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n};\n\nfunction findOrAddLabel(labels, raw, index) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  var _super19 = _createSuper(CategoryScale);\n\n  function CategoryScale(cfg) {\n    var _this14;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this14 = _super19.call(this, cfg);\n    _this14._startValue = undefined;\n    _this14._valueRange = 0;\n    return _this14;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getUserBounds2 = me.getUserBounds(),\n          minDefined = _me$getUserBounds2.minDefined,\n          maxDefined = _me$getUserBounds2.maxDefined;\n\n      var _me$getMinMax = me.getMinMax(true),\n          min = _me$getMinMax.min,\n          max = _me$getMinMax.max;\n\n      if (me.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = me.getLabels().length - 1;\n        }\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var offset = me.options.offset;\n      var ticks = [];\n      var labels = me.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      me._startValue = me.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var labels = me.getLabels();\n\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!me.isHorizontal()) {\n        me._reversePixels = !me._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n\n      if (typeof value !== 'number') {\n        value = me.parse(value);\n      }\n\n      return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var me = this;\n      var ticks = me.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return me.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n      step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref9) {\n  var horizontal = _ref9.horizontal,\n      minRotation = _ref9.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  var _super20 = _createSuper(LinearScaleBase);\n\n  function LinearScaleBase(cfg) {\n    var _this15;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this15 = _super20.call(this, cfg);\n    _this15.start = undefined;\n    _this15.end = undefined;\n    _this15._startValue = undefined;\n    _this15._endValue = undefined;\n    _this15._valueRange = 0;\n    return _this15;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n      var beginAtZero = me.options.beginAtZero;\n\n      var _me$getUserBounds3 = me.getUserBounds(),\n          minDefined = _me$getUserBounds3.minDefined,\n          maxDefined = _me$getUserBounds3.maxDefined;\n\n      var min = me.min,\n          max = me.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        setMax(max + 1);\n\n        if (!beginAtZero) {\n          setMin(min - 1);\n        }\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: me._maxDigits(),\n        horizontal: me.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = me._range || me;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var ticks = me.ticks;\n      var start = me.min;\n      var end = me.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (me.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      me._startValue = start;\n      me._endValue = end;\n      me._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  var _super21 = _createSuper(LinearScale);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _super21.apply(this, arguments);\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax2 = me.getMinMax(true),\n          min = _me$getMinMax2.min,\n          max = _me$getMinMax2.max;\n\n      me.min = isNumberFinite(min) ? min : 0;\n      me.max = isNumberFinite(max) ? max : 1;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var me = this;\n      var horizontal = me.isHorizontal();\n      var length = horizontal ? me.width : me.height;\n      var minRotation = toRadians(me.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      var tickFont = me._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  var _super22 = _createSuper(LogarithmicScale);\n\n  function LogarithmicScale(cfg) {\n    var _this16;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this16 = _super22.call(this, cfg);\n    _this16.start = undefined;\n    _this16.end = undefined;\n    _this16._startValue = undefined;\n    _this16._valueRange = 0;\n    return _this16;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax3 = me.getMinMax(true),\n          min = _me$getMinMax3.min,\n          max = _me$getMinMax3.max;\n\n      me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (me.options.beginAtZero) {\n        me._zero = true;\n      }\n\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var me = this;\n\n      var _me$getUserBounds4 = me.getUserBounds(),\n          minDefined = _me$getUserBounds4.minDefined,\n          maxDefined = _me$getUserBounds4.maxDefined;\n\n      var min = me.min;\n      var max = me.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n\n      if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n        setMin(exp(min, -1));\n      }\n\n      me.min = min;\n      me.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var generationOptions = {\n        min: me._userMin,\n        max: me._userMax\n      };\n      var ticks = generateTicks(generationOptions, me);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, me, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var me = this;\n      var start = me.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      me._startValue = log10(start);\n      me._valueRange = log10(me.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n\n      if (value === undefined || value === 0) {\n        value = me.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var decimal = me.getDecimalForPixel(pixel);\n      return Math.pow(10, me._startValue + decimal * me._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  var furthestAngles = {};\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale.getLabels().length;\n\n  for (var i = 0; i < valueCount; i++) {\n    var opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = scale.getIndexAngle(i);\n    var angle = toDegrees(angleRadians);\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale.getLabels().length;\n  var opts = scale.options;\n  var tickBackdropHeight = getTickBackdropHeight(opts);\n  var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (var i = 0; i < valueCount; i++) {\n    var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    var angle = toDegrees(scale.getIndexAngle(i));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n        x = _scale$_pointLabelIte.x,\n        y = _scale$_pointLabelIte.y,\n        textAlign = _scale$_pointLabelIte.textAlign,\n        left = _scale$_pointLabelIte.left,\n        top = _scale$_pointLabelIte.top,\n        right = _scale$_pointLabelIte.right,\n        bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n\n    if (!isNullOrUndef(backdropColor)) {\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  var _super23 = _createSuper(RadialLinearScale);\n\n  function RadialLinearScale(cfg) {\n    var _this17;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this17 = _super23.call(this, cfg);\n    _this17.xCenter = undefined;\n    _this17.yCenter = undefined;\n    _this17.drawingArea = undefined;\n    _this17._pointLabels = [];\n    _this17._pointLabelItems = [];\n    return _this17;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var me = this;\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n\n      var _me$getMinMax4 = me.getMinMax(false),\n          min = _me$getMinMax4.min,\n          max = _me$getMinMax4.max;\n\n      me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      me.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var me = this;\n      LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n      me._pointLabels = me.getLabels().map(function (value, index) {\n        var label = callback(me.options.pointLabels.callback, [value, index], me);\n        return label || label === 0 ? label : '';\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"_setReductions\",\n    value: function _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / this.getLabels().length;\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var me = this;\n      var scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n      return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var angle = me.getIndexAngle(index) - HALF_PI;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var me = this;\n      var _me$options7 = me.options,\n          backgroundColor = _me$options7.backgroundColor,\n          circular = _me$options7.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = me.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid;\n      var labelCount = me.getLabels().length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(me, labelCount);\n      }\n\n      if (grid.display) {\n        me.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = me.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(me.getContext(index - 1));\n            drawRadiusLine(me, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = me.getLabels().length - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(me.getContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n          position = me.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(me.xCenter, me.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = me.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(me.xCenter, me.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      me.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(me.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  var _super24 = _createSuper(TimeScale);\n\n  function TimeScale(props) {\n    var _this18;\n\n    _classCallCheck(this, TimeScale);\n\n    _this18 = _super24.call(this, props);\n    _this18._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this18._unit = 'day';\n    _this18._majorUnit = undefined;\n    _this18._offsets = {};\n    _this18._normalized = false;\n    _this18._parseOpts = undefined;\n    return _this18;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var me = this;\n      var options = me.options;\n      var adapter = me._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _me$getUserBounds5 = me.getUserBounds(),\n          min = _me$getUserBounds5.min,\n          max = _me$getUserBounds5.max,\n          minDefined = _me$getUserBounds5.minDefined,\n          maxDefined = _me$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(me._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(me.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      me.min = Math.min(min, max - 1);\n      me.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var me = this;\n      var options = me.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        me.min = me._userMin || timestamps[0];\n        me.max = me._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = me.min;\n      var max = me.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n      me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n      me.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var me = this;\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (me.options.offset && timestamps.length) {\n        first = me.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      me._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var me = this;\n      var adapter = me._adapter;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var me = this;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var unit = me._unit;\n      var majorUnit = me._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n\n      var label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], me) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      var me = this;\n      return value === null ? NaN : (value - me.min) / (me.max - me.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForValue(value);\n      return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return me.min + pos * (me.max - me.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = me._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var me = this;\n      var timeOpts = me.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n      var size = me._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var me = this;\n      var timestamps = me._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = me.getMatchingVisibleMetas();\n\n      if (me._normalized && metas.length) {\n        return me._cache.data = metas[0].controller.getAllParsedValues(me);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n      }\n\n      return me._cache.data = me.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var me = this;\n      var timestamps = me._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = me.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(me, labels[i]));\n      }\n\n      return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  var _super25 = _createSuper(TimeSeriesScale);\n\n  function TimeSeriesScale(props) {\n    var _this19;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this19 = _super25.call(this, props);\n    _this19._table = [];\n    _this19._minPos = undefined;\n    _this19._tableRange = undefined;\n    return _this19;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var me = this;\n\n      var timestamps = me._getTimestampsForTable();\n\n      var table = me._table = me.buildLookupTable(timestamps);\n      me._minPos = interpolate(table, me.min);\n      me._tableRange = interpolate(table, me.max) - me._minPos;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n          max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var me = this;\n      var timestamps = me._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = me.getDataTimestamps();\n      var label = me.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = me.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = me._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var me = this;\n      var offsets = me._offsets;\n      var decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","_","_arrayUnique","t","toRadians","k","toPercentage","m","toDimension","T","TAU","n","formatNumber","o","_angleBetween","H","HALF_PI","P","PI","p","isNumber","q","_limitValue","w","_lookupByKey","x","getRelativePosition$1","y","_isPointInArea","z","_rlookupByKey","A","toPadding","B","each","C","getMaximumSize","D","_getParentNode","E","readUsedSize","F","throttled","G","supportsEventListenerOptions","I","log10","J","_factorize","K","finiteOrDefault","L","callback","M","_addGrace","N","toDegrees","O","_measureText","Q","_int16Range","R","_alignPixel","S","clipArea","U","renderText","V","unclipArea","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","me","call","window","_update","_refresh","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","canStack","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","arguments","prototype","getAllScaleValues","_cache","$bar","metas","concat","getAllParsedValues","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","reset","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","getProps","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","resolver","subPrefixes","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","chartOptionScopes","platform","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","listen","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","lastEvent","getElementsAtEventForMode","onHover","invalidatePlugins","enumerable","defineProperties","unregister","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","destroy","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","interpolate","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","hitbox","boxMap","newBoxes","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","adjustHitBoxes","afterEvent","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","scaledDistance","distanceFromCenter","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\n * Chart.js v3.4.1\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, _ as _arrayUnique, t as toRadians, k as toPercentage, m as toDimension, T as TAU, n as formatNumber, o as _angleBetween, H as HALF_PI, P as PI, p as isNumber, q as _limitValue, w as _lookupByKey, x as getRelativePosition$1, y as _isPointInArea, z as _rlookupByKey, A as toPadding, B as each, C as getMaximumSize, D as _getParentNode, E as readUsedSize, F as throttled, G as supportsEventListenerOptions, I as log10, J as _factorize, K as finiteOrDefault, L as callback, M as _addGrace, N as toDegrees, O as _measureText, Q as _int16Range, R as _alignPixel, S as clipArea, U as renderText, V as unclipArea, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs) + me.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.bottom : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.4.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? me.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset, spacing);\n    drawBorder(ctx, me, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = me._margins.left;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = me._margins.top;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n      if (rtl) {\n        const boxMap = hitboxes.reduce((map, box) => {\n          map[box.row] = map[box.row] || [];\n          map[box.row].push(box);\n          return map;\n        }, {});\n        const newBoxes = [];\n        Object.keys(boxMap).forEach(key => {\n          boxMap[key].reverse();\n          newBoxes.push(...boxMap[key]);\n        });\n        me.legendHitBoxes = newBoxes;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : me.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    const table = me._table = me.buildLookupTable(timestamps);\n    me._minPos = interpolate(table, me.min);\n    me._tableRange = interpolate(table, me.max) - me._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * me._tableRange + me._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]},"metadata":{},"sourceType":"module"}