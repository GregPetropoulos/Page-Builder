{"ast":null,"code":"var _jsxFileName = \"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport accountService from '../services/account';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext();\nconst localUser = JSON.parse(localStorage.getItem);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState(null); //   useEffect(() => {\n  //     (async () => {\n  //       const localUser = JSON.parse(localStorage.getItem('user'));\n  // \t console.log('local user', localUser)\n  //       if (localUser && localUser.id) {\n  //         const user = await accountService.ApiGetUser(localUser.id);\n  //         if (user.data) {\n  //           console.log('HERE', localUser, user);\n  //           localStorage.setItem(\n  //             'user',\n  //             JSON.stringify({ id: user.data._id, ...user.data.profile })\n  //           );\n  //           setCurrentUser(user.data);\n  //         }\n  //       } else {\n  //         setCurrentUser({});\n  //       }\n  //     })();\n  //   }, []);\n\n  const auth = userData => {\n    console.log('SETTING USER', userData);\n    const user = {\n      id: userData._id,\n      ...userData.profile\n    };\n    localStorage.setItem('user', JSON.stringify(user));\n    setCurrentUser(user);\n  };\n\n  const signOut = () => {\n    localStorage.removeItem('user');\n    setCurrentUser({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      auth,\n      signOut\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"D3+eUn/eYbOcEwoCOjOk5Grmif4=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/context/AuthContext.js"],"names":["React","useEffect","useState","accountService","AuthContext","createContext","localUser","JSON","parse","localStorage","getItem","AuthProvider","children","currentUser","setCurrentUser","auth","userData","console","log","user","id","_id","profile","setItem","stringify","signOut","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;AAEP,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAxB,CAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,IAAD,CAA9C,CAD4C,CAG5C;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMa,IAAI,GAAIC,QAAD,IAAc;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,QAA5B;AACA,UAAMG,IAAI,GAAG;AAAEC,MAAAA,EAAE,EAAEJ,QAAQ,CAACK,GAAf;AAAoB,SAAGL,QAAQ,CAACM;AAAhC,KAAb;AACAb,IAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BhB,IAAI,CAACiB,SAAL,CAAeL,IAAf,CAA7B;AACAL,IAAAA,cAAc,CAACK,IAAD,CAAd;AACD,GALD;;AAOA,QAAMM,OAAO,GAAG,MAAM;AACpBhB,IAAAA,YAAY,CAACiB,UAAb,CAAwB,MAAxB;AACAZ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA,WAAF;AAAeE,MAAAA,IAAf;AAAqBU,MAAAA;AAArB,KAA7B;AAAA,cACGb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzCM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport accountService from '../services/account';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nconst localUser = JSON.parse(localStorage.getItem)\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  //   useEffect(() => {\r\n  //     (async () => {\r\n  //       const localUser = JSON.parse(localStorage.getItem('user'));\r\n  // \t console.log('local user', localUser)\r\n  //       if (localUser && localUser.id) {\r\n  //         const user = await accountService.ApiGetUser(localUser.id);\r\n\r\n  //         if (user.data) {\r\n  //           console.log('HERE', localUser, user);\r\n  //           localStorage.setItem(\r\n  //             'user',\r\n  //             JSON.stringify({ id: user.data._id, ...user.data.profile })\r\n  //           );\r\n  //           setCurrentUser(user.data);\r\n  //         }\r\n  //       } else {\r\n  //         setCurrentUser({});\r\n  //       }\r\n  //     })();\r\n  //   }, []);\r\n\r\n  const auth = (userData) => {\r\n    console.log('SETTING USER', userData);\r\n    const user = { id: userData._id, ...userData.profile };\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem('user');\r\n    setCurrentUser({});\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, auth, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}