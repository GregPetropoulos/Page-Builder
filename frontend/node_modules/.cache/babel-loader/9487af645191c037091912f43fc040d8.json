{"ast":null,"code":"import axios from 'axios';\n\nconst createPage = async (name, thumbnail, html) => {\n  const page = {\n    name,\n    thumbnail,\n    html\n  };\n  console.log('page', page);\n\n  try {\n    const response = await axios.post('/api/create', page, {\n      withCredentials: true\n    });\n    console.log('RESPONSE API', response);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst fetchPages = async () => {\n  const response = await axios.get('/api/page/pages', {\n    withCredentials: true\n  });\n  console.log('response', response);\n  return response.data;\n};\n\nconst viewPage = async id => {\n  await axios.get(`/page/${id}`, {\n    withCredentials: true\n  }); // window.location.reload();\n};\n\nconst donwloadPage = async id => {\n  await axios.get(`/page/${id}/download`, {\n    withCredentials: true\n  });\n};\n\nconst pagesService = {\n  createPage,\n  fetchPages,\n  viewPage,\n  donwloadPage\n};\nexport default pagesService;","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/services/pages.js"],"names":["axios","createPage","name","thumbnail","html","page","console","log","response","post","withCredentials","err","fetchPages","get","data","viewPage","id","donwloadPage","pagesService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAG,OAAOC,IAAP,EAAaC,SAAb,EAAwBC,IAAxB,KAAiC;AAEnD,QAAMC,IAAI,GAAG;AACZH,IAAAA,IADY;AAEZC,IAAAA,SAFY;AAGZC,IAAAA;AAHY,GAAb;AAKAE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;AACA,MAAI;AACH,UAAMG,QAAQ,GAAE,MAAMR,KAAK,CAACS,IAAN,CAAW,aAAX,EAA0BJ,IAA1B,EAAgC;AAAEK,MAAAA,eAAe,EAAE;AAAnB,KAAhC,CAAtB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BC,QAA3B;AACA,GAHD,CAGE,OAAOG,GAAP,EAAY;AACbL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA;AACD,CAdD;;AAgBA,MAAMC,UAAU,GAAG,YAAY;AAC9B,QAAMJ,QAAQ,GAAG,MAAMR,KAAK,CAACa,GAAN,CAAU,iBAAV,EAA6B;AAAEH,IAAAA,eAAe,EAAE;AAAnB,GAA7B,CAAvB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAxB;AACA,SAAOA,QAAQ,CAACM,IAAhB;AAEA,CALD;;AAOA,MAAMC,QAAQ,GAAG,MAAMC,EAAN,IAAY;AAC5B,QAAMhB,KAAK,CAACa,GAAN,CAAW,SAAQG,EAAG,EAAtB,EAAyB;AAAEN,IAAAA,eAAe,EAAE;AAAnB,GAAzB,CAAN,CAD4B,CAE5B;AACA,CAHD;;AAKA,MAAMO,YAAY,GAAG,MAAMD,EAAN,IAAY;AAChC,QAAMhB,KAAK,CAACa,GAAN,CAAW,SAAQG,EAAG,WAAtB,EAAkC;AAAEN,IAAAA,eAAe,EAAE;AAAnB,GAAlC,CAAN;AACA,CAFD;;AAIA,MAAMQ,YAAY,GAAG;AACpBjB,EAAAA,UADoB;AAEpBW,EAAAA,UAFoB;AAGpBG,EAAAA,QAHoB;AAIpBE,EAAAA;AAJoB,CAArB;AAOA,eAAeC,YAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst createPage = async (name, thumbnail, html) => {\r\n\t\r\n\tconst page = {\r\n\t\tname,\r\n\t\tthumbnail,\r\n\t\thtml,\r\n\t};\r\n\tconsole.log('page', page)\r\n\ttry {\r\n\t\tconst response= await axios.post('/api/create', page, { withCredentials: true });\r\n\t\tconsole.log('RESPONSE API',response)\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nconst fetchPages = async () => {\r\n\tconst response = await axios.get('/api/page/pages', { withCredentials: true });\r\n\tconsole.log('response', response)\r\n\treturn response.data;\r\n\t\r\n};\r\n\r\nconst viewPage = async id => {\r\n\tawait axios.get(`/page/${id}`, { withCredentials: true });\r\n\t// window.location.reload();\r\n};\r\n\r\nconst donwloadPage = async id => {\r\n\tawait axios.get(`/page/${id}/download`, { withCredentials: true });\r\n};\r\n\r\nconst pagesService = {\r\n\tcreatePage,\r\n\tfetchPages,\r\n\tviewPage,\r\n\tdonwloadPage,\r\n};\r\n\r\nexport default pagesService;\r\n"]},"metadata":{},"sourceType":"module"}