{"ast":null,"code":"import { routes } from './routes';\nimport axios from 'axios';\n\nconst ApiLogin = async userInfo => {\n  try {\n    const response = await axios.post(routes.login(), userInfo);\n    return response.data;\n  } catch (err) {\n    const error = err;\n\n    if (error.response && error.response.status !== 404) {\n      const data = error.response.data;\n\n      if (data) {\n        return {\n          error: data.error\n        };\n      }\n    }\n\n    return {\n      error: 'Something went wrong, try again later'\n    };\n  }\n};\n\n_c = ApiLogin;\n\nconst ApiLogOut = async userInfo => {\n  try {\n    const response = await axios.post(routes.logout(), userInfo);\n    console.log('logout response', response);\n    return response.data;\n  } catch (err) {\n    const error = err;\n\n    if (error.response && error.response.status !== 404) {\n      const data = error.response.data;\n\n      if (data) {\n        return {\n          error: data.error\n        };\n      }\n    }\n\n    return {\n      error: 'Something went wrong, try again later'\n    };\n  }\n};\n\n_c2 = ApiLogOut;\n\nconst ApiRegister = async (email, usernamepassword) => {\n  try {\n    const response = await axios.post(routes.register(), {\n      email,\n      username,\n      password\n    });\n    return response.data;\n  } catch (err) {\n    const error = err;\n\n    if (error.response && error.response.status !== 404) {\n      const data = error.response.data;\n\n      if (data) {\n        return {\n          error: data.error\n        };\n      }\n    }\n\n    return {\n      error: 'Something went wrong, try again later'\n    };\n  }\n};\n\n_c3 = ApiRegister;\n\nconst ApiProfileForm = async (firstName, lastName, about, github, email) => {\n  console.table([firstName, lastName, about, github, email]);\n\n  try {\n    const response = await axios.post(routes.profile(), {\n      firstName,\n      lastName,\n      about,\n      github,\n      email\n    });\n    console.log('api form response', response);\n    return response;\n  } catch (e) {\n    console.error({\n      e\n    });\n    return {\n      error: `Error: ${e}`\n    };\n  }\n};\n\n_c4 = ApiProfileForm;\n\nconst ApiDeleteUser = async email => {\n  try {\n    const response = await axios.delete(routes.deleteUser(email));\n    console.log('delete response', response);\n    return response;\n  } catch (e) {\n    console.error({\n      e\n    });\n    return {\n      error: `Error: ${e}`\n    };\n  }\n};\n\n_c5 = ApiDeleteUser;\nconst accountService = {\n  ApiLogin,\n  ApiLogOut,\n  ApiRegister,\n  ApiProfileForm,\n  ApiDeleteUser\n};\nexport default accountService;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ApiLogin\");\n$RefreshReg$(_c2, \"ApiLogOut\");\n$RefreshReg$(_c3, \"ApiRegister\");\n$RefreshReg$(_c4, \"ApiProfileForm\");\n$RefreshReg$(_c5, \"ApiDeleteUser\");","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/services/account.js"],"names":["routes","axios","ApiLogin","userInfo","response","post","login","data","err","error","status","ApiLogOut","logout","console","log","ApiRegister","email","usernamepassword","register","username","password","ApiProfileForm","firstName","lastName","about","github","table","profile","e","ApiDeleteUser","delete","deleteUser","accountService"],"mappings":"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","sourcesContent":["import { routes } from './routes';\r\nimport axios from 'axios';\r\n\r\nconst ApiLogin = async (userInfo) => {\r\n  try {\r\n    const response = await axios.post(routes.login(), userInfo);\r\n    return response.data;\r\n  } catch (err) {\r\n    const error = err;\r\n    if (error.response && error.response.status !== 404) {\r\n      const data = error.response.data;\r\n      if (data) {\r\n        return { error: data.error };\r\n      }\r\n    }\r\n    return { error: 'Something went wrong, try again later' };\r\n  }\r\n};\r\nconst ApiLogOut = async (userInfo) => {\r\n  try {\r\n    const response = await axios.post(routes.logout(), userInfo);\r\n    console.log('logout response', response);\r\n    return response.data;\r\n  } catch (err) {\r\n    const error = err;\r\n    if (error.response && error.response.status !== 404) {\r\n      const data = error.response.data;\r\n      if (data) {\r\n        return { error: data.error };\r\n      }\r\n    }\r\n    return { error: 'Something went wrong, try again later' };\r\n  }\r\n};\r\n\r\nconst ApiRegister = async (email, usernamepassword) => {\r\n  try {\r\n    const response = await axios.post(routes.register(), {\r\n      email,\r\n      username,\r\n      password,\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    const error = err;\r\n    if (error.response && error.response.status !== 404) {\r\n      const data = error.response.data;\r\n      if (data) {\r\n        return { error: data.error };\r\n      }\r\n    }\r\n    return { error: 'Something went wrong, try again later' };\r\n  }\r\n};\r\n\r\nconst ApiProfileForm = async (firstName, lastName, about, github, email) => {\r\n  console.table([firstName, lastName, about, github, email]);\r\n  try {\r\n    const response = await axios.post(routes.profile(), {\r\n      firstName,\r\n      lastName,\r\n      about,\r\n      github,\r\n      email,\r\n    });\r\n    console.log('api form response', response);\r\n    return response;\r\n  } catch (e) {\r\n    console.error({ e });\r\n    return { error: `Error: ${e}` };\r\n  }\r\n};\r\n\r\nconst ApiDeleteUser = async (email) => {\r\n  try {\r\n    const response = await axios.delete(routes.deleteUser(email));\r\n    console.log('delete response', response);\r\n    return response;\r\n  } catch (e) {\r\n    console.error({ e });\r\n    return { error: `Error: ${e}` };\r\n  }\r\n};\r\n\r\nconst accountService = {\r\n  ApiLogin,\r\n  ApiLogOut,\r\n  ApiRegister,\r\n  ApiProfileForm,\r\n  ApiDeleteUser,\r\n};\r\n\r\nexport default accountService;\r\n"]},"metadata":{},"sourceType":"module"}