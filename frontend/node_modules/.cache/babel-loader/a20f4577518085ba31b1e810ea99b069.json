{"ast":null,"code":"import axios from 'axios';\nimport { routes } from './routes';\n\nconst createPage = async (name, thumbnail, html) => {\n  const page = {\n    name,\n    thumbnail,\n    html\n  };\n\n  try {\n    await axios.post(routes.createPage(), page, {\n      withCredentials: true\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst fetchPages = async () => {\n  const response = await axios.get(routes.fetchPages(), {\n    withCredentials: true\n  });\n  return response.data;\n};\n\nconst viewPage = async id => {\n  console.log('ID', id);\n  const response = await axios.get(routes.viewPage(id), {\n    withCredentials: true\n  });\n  console.log('sss', response);\n  return response.data; // window.location.reload();\n};\n\nconst downloadPage = async id => {\n  // await axios.get(`/page/${id}/download`, { withCredentials: true });\n  await axios.get(routes.download(), {\n    withCredentials: true\n  });\n};\n\nconst pagesService = {\n  createPage,\n  fetchPages,\n  viewPage,\n  downloadPage\n};\nexport default pagesService;","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/services/pages.js"],"names":["axios","routes","createPage","name","thumbnail","html","page","post","withCredentials","err","console","log","fetchPages","response","get","data","viewPage","id","downloadPage","download","pagesService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,UAAU,GAAG,OAAOC,IAAP,EAAaC,SAAb,EAAwBC,IAAxB,KAAiC;AACnD,QAAMC,IAAI,GAAG;AACZH,IAAAA,IADY;AAEZC,IAAAA,SAFY;AAGZC,IAAAA;AAHY,GAAb;;AAKA,MAAI;AACH,UAAML,KAAK,CAACO,IAAN,CAAWN,MAAM,CAACC,UAAP,EAAX,EAAgCI,IAAhC,EAAsC;AAAEE,MAAAA,eAAe,EAAE;AAAnB,KAAtC,CAAN;AACA,GAFD,CAEE,OAAOC,GAAP,EAAY;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA;AACD,CAXD;;AAaA,MAAMG,UAAU,GAAG,YAAY;AAC9B,QAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUb,MAAM,CAACW,UAAP,EAAV,EAA+B;AAAEJ,IAAAA,eAAe,EAAE;AAAnB,GAA/B,CAAvB;AACA,SAAOK,QAAQ,CAACE,IAAhB;AAEA,CAJD;;AAMA,MAAMC,QAAQ,GAAG,MAAMC,EAAN,IAAY;AAC5BP,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBM,EAAlB;AACA,QAAMJ,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUb,MAAM,CAACe,QAAP,CAAgBC,EAAhB,CAAV,EAA+B;AAAET,IAAAA,eAAe,EAAE;AAAnB,GAA/B,CAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,QAAnB;AACA,SAAOA,QAAQ,CAACE,IAAhB,CAJ4B,CAK5B;AACA,CAND;;AAQA,MAAMG,YAAY,GAAG,MAAMD,EAAN,IAAY;AAChC;AACA,QAAMjB,KAAK,CAACc,GAAN,CAAUb,MAAM,CAACkB,QAAP,EAAV,EAA6B;AAAEX,IAAAA,eAAe,EAAE;AAAnB,GAA7B,CAAN;AACA,CAHD;;AAKA,MAAMY,YAAY,GAAG;AACpBlB,EAAAA,UADoB;AAEpBU,EAAAA,UAFoB;AAGpBI,EAAAA,QAHoB;AAIpBE,EAAAA;AAJoB,CAArB;AAOA,eAAeE,YAAf","sourcesContent":["import axios from 'axios';\r\nimport { routes } from './routes'\r\n\r\nconst createPage = async (name, thumbnail, html) => {\t\r\n\tconst page = {\r\n\t\tname,\r\n\t\tthumbnail,\r\n\t\thtml,\r\n\t};\r\n\ttry {\r\n\t\tawait axios.post(routes.createPage(), page, { withCredentials: true });\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};\r\n\r\nconst fetchPages = async () => {\r\n\tconst response = await axios.get(routes.fetchPages(), { withCredentials: true });\r\n\treturn response.data;\r\n\t\r\n};\r\n\r\nconst viewPage = async id => {\r\n\tconsole.log('ID', id)\r\n\tconst response = await axios.get(routes.viewPage(id), { withCredentials: true });\r\n\tconsole.log('sss', response)\r\n\treturn response.data\r\n\t// window.location.reload();\r\n};\r\n\r\nconst downloadPage = async id => {\r\n\t// await axios.get(`/page/${id}/download`, { withCredentials: true });\r\n\tawait axios.get(routes.download(), { withCredentials: true });\r\n};\r\n\r\nconst pagesService = {\r\n\tcreatePage,\r\n\tfetchPages,\r\n\tviewPage,\r\n\tdownloadPage,\r\n};\r\n\r\nexport default pagesService;\r\n"]},"metadata":{},"sourceType":"module"}