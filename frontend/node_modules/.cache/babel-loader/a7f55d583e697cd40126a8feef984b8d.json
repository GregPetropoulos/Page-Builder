{"ast":null,"code":"import _objectSpread from\"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import accountService from'../services/account';import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/React.createContext();var localUser=JSON.parse(localStorage.getItem('user'));export var AuthProvider=function AuthProvider(_ref){var children=_ref.children;var _useState=useState(localUser||null),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];//   useEffect(() => {\n//     (async () => {\n//       const localUser = JSON.parse(localStorage.getItem('user'));\n// \t console.log('local user', localUser)\n//       if (localUser && localUser.id) {\n//         const user = await accountService.ApiGetUser(localUser.id);\n//         if (user.data) {\n//           console.log('HERE', localUser, user);\n//           localStorage.setItem(\n//             'user',\n//             JSON.stringify({ id: user.data._id, ...user.data.profile })\n//           );\n//           setCurrentUser(user.data);\n//         }\n//       } else {\n//         setCurrentUser({});\n//       }\n//     })();\n//   }, []);\nvar auth=function auth(userData){console.log('SETTING USER',userData);var user=_objectSpread({id:userData._id},userData.profile);localStorage.setItem('user',JSON.stringify(user));setCurrentUser(user);};var signOut=function signOut(){localStorage.removeItem('user');setCurrentUser({});};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser:currentUser,auth:auth,signOut:signOut},children:children});};","map":{"version":3,"sources":["/Users/gregpetropoulos/CodingBootcamp/Page-Builder-Project-3/frontend/src/context/AuthContext.js"],"names":["React","useEffect","useState","accountService","AuthContext","createContext","localUser","JSON","parse","localStorage","getItem","AuthProvider","children","currentUser","setCurrentUser","auth","userData","console","log","user","id","_id","profile","setItem","stringify","signOut","removeItem"],"mappings":"uXAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,qBAA3B,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGJ,KAAK,CAACK,aAAN,EAApB,CAEP,GAAMC,CAAAA,SAAS,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC5C,cAAsCV,QAAQ,CAACI,SAAS,EAAI,IAAd,CAA9C,wCAAOO,WAAP,eAAoBC,cAApB,eAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,QAAD,CAAc,CACzBC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BF,QAA5B,EACA,GAAMG,CAAAA,IAAI,gBAAKC,EAAE,CAAEJ,QAAQ,CAACK,GAAlB,EAA0BL,QAAQ,CAACM,OAAnC,CAAV,CACAb,YAAY,CAACc,OAAb,CAAqB,MAArB,CAA6BhB,IAAI,CAACiB,SAAL,CAAeL,IAAf,CAA7B,EACAL,cAAc,CAACK,IAAD,CAAd,CACD,CALD,CAOA,GAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBhB,YAAY,CAACiB,UAAb,CAAwB,MAAxB,EACAZ,cAAc,CAAC,EAAD,CAAd,CACD,CAHD,CAKA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAED,WAAW,CAAXA,WAAF,CAAeE,IAAI,CAAJA,IAAf,CAAqBU,OAAO,CAAPA,OAArB,CAA7B,UACGb,QADH,EADF,CAKD,CAzCM","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport accountService from '../services/account';\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nconst localUser = JSON.parse(localStorage.getItem('user'))\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(localUser || null);\r\n\r\n  //   useEffect(() => {\r\n  //     (async () => {\r\n  //       const localUser = JSON.parse(localStorage.getItem('user'));\r\n  // \t console.log('local user', localUser)\r\n  //       if (localUser && localUser.id) {\r\n  //         const user = await accountService.ApiGetUser(localUser.id);\r\n\r\n  //         if (user.data) {\r\n  //           console.log('HERE', localUser, user);\r\n  //           localStorage.setItem(\r\n  //             'user',\r\n  //             JSON.stringify({ id: user.data._id, ...user.data.profile })\r\n  //           );\r\n  //           setCurrentUser(user.data);\r\n  //         }\r\n  //       } else {\r\n  //         setCurrentUser({});\r\n  //       }\r\n  //     })();\r\n  //   }, []);\r\n\r\n  const auth = (userData) => {\r\n    console.log('SETTING USER', userData);\r\n    const user = { id: userData._id, ...userData.profile };\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setCurrentUser(user);\r\n  };\r\n\r\n  const signOut = () => {\r\n    localStorage.removeItem('user');\r\n    setCurrentUser({});\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, auth, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}